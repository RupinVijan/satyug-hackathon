"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/api/hello";
exports.ids = ["pages/api/hello"];
exports.modules = {

/***/ "@aeternity/aepp-sdk":
/*!**************************************!*\
  !*** external "@aeternity/aepp-sdk" ***!
  \**************************************/
/***/ ((module) => {

module.exports = require("@aeternity/aepp-sdk");

/***/ }),

/***/ "(api)/./pages/api/hello.js":
/*!****************************!*\
  !*** ./pages/api/hello.js ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ handler)\n/* harmony export */ });\n/* harmony import */ var _aeternity_aepp_sdk__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @aeternity/aepp-sdk */ \"@aeternity/aepp-sdk\");\n/* harmony import */ var _aeternity_aepp_sdk__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_aeternity_aepp_sdk__WEBPACK_IMPORTED_MODULE_0__);\n// Next.js API route support: https://nextjs.org/docs/api-routes/introduction\n\n// const { Universal: Ae, MemoryAccount, Node } = require('@aeternity/aepp-sdk')\nfunction handler(req, res) {\n    // SDK & Node setup\n    const privkey1 = \"78c93e7c3f63759a2684fa7b3af609f933da1262a6fc7aa430bec5a6410da2f9336752c69268d0735b178776f2f7ed655fe02e9e0bb7e81b1bcb37403b20552f\";\n    const pubkey1 = \"ak_Pe36bK1sE5vJYBF7qrafBhok3hyJ1KySkpCamuigWqmJqv2zF\";\n    const privkey2 = \"331f917eddca8dc0515967d55c4ca81fe6cc3714360a018a1de9567cbd2eab9ddc328ccde058c5460b14ee61b95b89d76d0ba3c5b5ca4d2d853b66602253ef23\";\n    const pubkey2 = \"ak_2fyecudK7E6GWqjaEH2VsXwQTiY4gTqxSVe4CvRXJHJBCuj9Fo\";\n    // accounts that will be used for the transactions\n    const acc1 = (0,_aeternity_aepp_sdk__WEBPACK_IMPORTED_MODULE_0__.MemoryAccount)({\n        keypair: {\n            secretKey: privkey1,\n            publicKey: pubkey1\n        }\n    });\n    const acc2 = (0,_aeternity_aepp_sdk__WEBPACK_IMPORTED_MODULE_0__.MemoryAccount)({\n        keypair: {\n            secretKey: privkey2,\n            publicKey: pubkey2\n        }\n    });\n    console.log(acc1, acc2, \"ll\");\n    if (privkey1.length < 1 || privkey2.length < 1 || pubkey1.length < 1 || pubkey2.length < 1) {\n        console.log(\"Ooops, did you provide the keys like seen in the video ?\");\n    }\n    // a reference to the aeternity blockchain\n    var Chain;\n    // instantiate a connection to the aeternity blockchain\n    const main = async ()=>{\n        const node1 = await (0,_aeternity_aepp_sdk__WEBPACK_IMPORTED_MODULE_0__.Node)({\n            url: \"https://testnet.aeternity.io/\",\n            internalUrl: \"https://testnet.aeternity.io/\"\n        });\n        // const node2 = ...\n        Chain = await (0,_aeternity_aepp_sdk__WEBPACK_IMPORTED_MODULE_0__.Universal)({\n            // Define Node\n            nodes: [\n                {\n                    name: \"someNode\",\n                    instance: node1\n                }\n            ],\n            compilerUrl: \"https://latest.compiler.aepps.com\",\n            accounts: [\n                acc1,\n                acc2\n            ],\n            address: pubkey2\n        });\n        const height = await Chain.height();\n        console.log(\"Connected to Testnet Node! Current Block:\", height);\n    // // CONTRACT DEPLOYMENT\n    // // the code of your contract - watch out for correct indentations !\n    //     const code = \n    //     `\n    // contract SimpleToken =\n    //     record state = {\n    //         total_supply : int,\n    //         name : string,\n    //         balances : map(address, int)\n    //         }\n    //     entrypoint init(initial_balance : int, name : string) =\n    //      { name         = name,\n    //        total_supply = initial_balance,\n    //        balances     = {[Call.caller] = initial_balance}\n    //       }\n    //     entrypoint name() : string =\n    //         state.name\n    //     entrypoint balance(account : address) : int = \n    //         state.balances[account = 0]\n    //     stateful entrypoint transfer(recipient : address, value : int) =\n    //         require(value >= 0, \"NON_NEGATIVE_VALUE_REQUIRED\")\n    //         require(balance(Call.caller) >= value, \"Not enough funds\")\n    //         put(state{ balances[Call.caller] = state.balances[Call.caller] - value } )\n    //         put(state{ balances[recipient] = state.balances[recipient = 0] + value })\n    //         true\n    // `\n    //     // create a contract instance\n    //    const SimpleToken = await Chain.getContractInstance(code);\n    //     // Deploy the contract\n    //     try {\n    //       console.log(\"Deploying contract....\")\n    //       console.log(\"Using account for deployment: \", Chain.addresses()[0]);\n    //       await SimpleToken.methods.init(1337,'SimpleToken');\n    //       console.log(\"Contract deployed successfully!\")\n    //       console.log(\"Contract address: \", SimpleToken.deployInfo.address)\n    //       console.log(\"Transaction ID: \", SimpleToken.deployInfo.transaction)\n    //       console.log(\"\\n \\n\")  \n    //     } catch(e){\n    //       console.log(\"Something went wrong, did you set up the SDK properly?\");\n    //       console.log(\"Deployment failed: \", e)\n    //     }\n    // //      await new Promise(resolve => setTimeout(resolve, 4000));\n    //     // CONTRACT FUNCTION CALL\n    //     const options = {\n    //         amount: 1337,\n    //         onAccount: 'ak_214WSEqTB1MbkEKmS9Sh5V4fqHY9b6Xterex15JQTdyiDLdXYW'\n    //     }\n    //     try{\n    //       let callresult = await SimpleToken.methods.transfer('ak_214WSEqTB1MbkEKmS9Sh5V4fqHY9b6Xterex15JQTdyiDLdXYW', 42);\n    //       // const myContract = SimpleToken.methods;\n    //       // const callresult = await myContract.transfer('ak_214WSEqTB1MbkEKmS9Sh5V4fqHY9b6Xterex15JQTdyiDLdXYW', 42);\n    //       //  explicitly do a transaction for that function call\n    //       //  let callresult = await SimpleToken.methods.transfer.send('ak_214WSEqTB1MbkEKmS9Sh5V4fqHY9b6Xterex15JQTdyiDLdXYW', 42);\n    //       //  just dry-run the transaction to check if it would succeed at current block\n    //       //  let callresult = await SimpleToken.methods.transfer.get('ak_214WSEqTB1MbkEKmS9Sh5V4fqHY9b6Xterex15JQTdyiDLdXYW', 42);\n    //       console.log(\"Transaction ID: \", callresult.hash);\n    //       console.log(\"Advice: log the full callResult object for more useful information!\")\n    //       console.log(\"Function call returned: \", callresult.decodedResult);\n    //     } catch (e){\n    //       console.log(\"Calling your function errored: \", e)\n    //     }\n    //     // optionally, give the sync some time:\n    //     //await new Promise(resolve => setTimeout(resolve, 3000));\n    //     const spendResult = await Chain.spend(1337, \"ak_214WSEqTB1MbkEKmS9Sh5V4fqHY9b6Xterex15JQTdyiDLdXYW\")\n    //     console.log(\"Spend result: \", spendResult)\n    };\n    main();\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api)/./pages/api/hello.js\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../webpack-api-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = (__webpack_exec__("(api)/./pages/api/hello.js"));
module.exports = __webpack_exports__;

})();